TODO:
Create tags:
-AppDownloadTag
-DialerTag
-FreeTextTag
-URITag
-VCardTag
Make sure MIBPClient supports the tag types in a extensible manner.
Test services
Document
Initial release #1

Implement tag generation component so that a Tag can be generated and modified (in a valid manner).
-Support custom tags (and advanced tags)
Token information (number of categories, list of categories, number of tags in a category, list of tags in the category, if the tag/category is active or not, etc.)
Statistic information (such as scan totals)
See if it's possible to make a "delete category" function
Release #2

[Note: This release might not ever happen if Microsoft doesn't open up the ability to make 3rd party Tag readers. This TODO will remain here for if the ability is ever enabled]
Implement tag processor (concept is to have a data type with the already parsed tag and to process it. Might not work out perfectly since it MS Tag tracks usage, location, etc.)
Implement tag parser (this is the standard, image goes in, tag comes out [simply binary tag, not identifying it, registering it, etc. That's for the processor)
Add validation for custom tags
Add Device ID support
Release #3

NOTE:
Implemented service is copy of service generated with wscompile (see below) which waas then modified to its current state. This has been done so that the service can be generated in the most memory/process efficient manner and handle the sub tag types that require more complex code then what is generated by wscompile.
Recommended to have PERMISSION_BROWSER_FILTER enabled. For one reason or another, if this is not enabled the library's JAX-RPC handlers have a 50/50 chance of throwing a ControlledAccessException. (Note #2, the chances with the permission enabled is now about 80/20 [20 that it will happen]).

Service generation:
-Service stub classes are generated with "wscompile -gen -cldc1.1 -f:searchschema -d {dest folder} config.xml" where config.xml is:
<?xml version="1.0" encoding="utf-8"?>
<configuration xmlns="http://java.sun.com/xml/ns/jax-rpc/ri/config">
  <wsdl location="https://ws.tag.microsoft.com/MIBPService.wsdl" packageName="mstag.services" />
</configuration>
-Then the following classes has "java.io.ObjectStreamException" removed from "readResolve" so it will compile:
UserAuthFaultReason
TagStatus
TagFaultReason
SenderFaultReason
SenderFaultReason
DecorationType
CategoryStatus
CategoryFaultReason
CategoryFaultReason
-IMIBPContract_Stub should have the following changes made:
--_type_UTCStartDate's Type is changed from "UNKNOWN" to "Type.STRING"
--_type_UTCEndDate's Type is changed from "UNKNOWN" to "Type.STRING"
--_type_GetBarcodeResult's Type is changed from "UNKNOWN" to "Type.STRING"
-Then go through everything that uses getUTCStartDate and getUTCEndDate and surround the code with a call to "Util.toSOAPString"
-For _type_GetBarcodeResult, go to the bottom of "getBarcode" (where it is used) and replace "result = (byte[])getBarcodeResultObj;" with:
try
{
	result = Base64InputStream.decode((String)getBarcodeResultObj);
}
catch (IOException e)
{
	result = null;
}
-Remove all "function classes", for example for CreateTag there are 2 classes, CreateTag and CreateTagResponse. Both are unnecessary.