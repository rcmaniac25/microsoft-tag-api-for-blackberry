// This class was generated by 172 StubGenerator.
// Contents subject to change without notice.
// @generated

package mstag.services;

import java.io.IOException;

import javax.xml.rpc.JAXRPCException;
import javax.xml.namespace.QName;
import javax.microedition.xml.rpc.Operation;
import javax.microedition.xml.rpc.Type;
import javax.microedition.xml.rpc.ComplexType;
import javax.microedition.xml.rpc.Element;
import javax.microedition.xml.rpc.FaultDetailException;
import javax.microedition.xml.rpc.FaultDetailHandler;

import net.rim.device.api.io.Base64InputStream;

import mstag.Util;

public class IMIBPContract_Stub implements mstag.services.IMIBPContract, javax.xml.rpc.Stub, FaultDetailHandler {
	private String[] _propertyNames;
	private Object[] _propertyValues;

	public IMIBPContract_Stub() {
		_propertyNames = new String[] {ENDPOINT_ADDRESS_PROPERTY};
		_propertyValues = new Object[] {"https://ws.tag.microsoft.com/Service.svc"};
	}

	public void _setProperty(String name, Object value) {
		int size = _propertyNames.length;
		for (int i = 0; i < size; ++i) {
			if (_propertyNames[i].equals(name)) {
				_propertyValues[i] = value;
				return;
			}
		}
		// Need to expand our array for a new property
		String[] newPropNames = new String[size + 1];
		System.arraycopy(_propertyNames, 0, newPropNames, 0, size);
		_propertyNames = newPropNames;
		Object[] newPropValues = new Object[size + 1];
		System.arraycopy(_propertyValues, 0, newPropValues, 0, size);
		_propertyValues = newPropValues;

		_propertyNames[size] = name;
		_propertyValues[size] = value;
	}

	public Object _getProperty(String name) {
		for (int i = 0; i < _propertyNames.length; ++i) {
			if (_propertyNames[i].equals(name)) {
				return _propertyValues[i];
			}
		}
		if (ENDPOINT_ADDRESS_PROPERTY.equals(name) || USERNAME_PROPERTY.equals(name) || PASSWORD_PROPERTY.equals(name)) {
			return null;
		}
		if (SESSION_MAINTAIN_PROPERTY.equals(name)) {
			return new java.lang.Boolean(false);
		}
		throw new JAXRPCException("Stub does not recognize property: "+name);
	}

	protected void _prepOperation(Operation op) {
		for (int i = 0; i < _propertyNames.length; ++i) {
			op.setProperty(_propertyNames[i], _propertyValues[i].toString());
		}
	}

	// 
	//  Begin user methods
	// 

	public java.lang.Boolean createCategory(mstag.services.UserCredential userCredential, mstag.services.Category category) throws java.rmi.RemoteException, mstag.services.ReceiverFault_Exception, mstag.services.UserAuthFault_Exception, mstag.services.CategoryFault_Exception, mstag.services.SenderFault_Exception {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[2];
		Object[] userCredentialObject;
		if (userCredential == null) {
			userCredentialObject = null;
		} else {
			userCredentialObject = new Object[1];
			userCredentialObject[0] = userCredential.getAccessToken();
		}
		inputObject[0] = userCredentialObject;
		Object[] categoryObject;
		if (category == null) {
			categoryObject = null;
		} else {
			categoryObject = new Object[4];
			categoryObject[0] = category.getName();
			categoryObject[1] = Util.toSOAPString(category.getUTCStartDate());
			categoryObject[2] = Util.toSOAPString(category.getUTCEndDate());
			categoryObject[3] = category.getCategoryStatus().getValue();
		}
		inputObject[1] = categoryObject;

		Operation op = Operation.newInstance(_qname__CreateCategory, _type_CreateCategory, _type_CreateCategoryResponse, this);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://www.ws.tag.microsoft.com/ver1/IMIBPContract/CreateCategory");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			} else if (cause instanceof FaultDetailException) {
				FaultDetailException fde = (FaultDetailException) cause;
				QName fdeName = fde.getFaultDetailName();
				if ("ReceiverFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param;
					errorMessage_param = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.ReceiverFaultReason reason_param;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param = null;
					} else {
						java.lang.String receiverFaultReason;
						receiverFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param = mstag.services.ReceiverFaultReason.fromValue(receiverFaultReason);
					}
					throw new mstag.services.ReceiverFault_Exception(errorMessage_param, reason_param);
				}
				if ("UserAuthFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param2;
					errorMessage_param2 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.UserAuthFaultReason reason_param2;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param2 = null;
					} else {
						java.lang.String userAuthFaultReason;
						userAuthFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param2 = mstag.services.UserAuthFaultReason.fromValue(userAuthFaultReason);
					}
					throw new mstag.services.UserAuthFault_Exception(errorMessage_param2, reason_param2);
				}
				if ("CategoryFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param3;
					errorMessage_param3 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.CategoryFaultReason reason_param3;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param3 = null;
					} else {
						java.lang.String categoryFaultReason;
						categoryFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param3 = mstag.services.CategoryFaultReason.fromValue(categoryFaultReason);
					}
					throw new mstag.services.CategoryFault_Exception(errorMessage_param3, reason_param3);
				}
				if ("SenderFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param4;
					errorMessage_param4 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.SenderFaultReason reason_param4;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param4 = null;
					} else {
						java.lang.String senderFaultReason;
						senderFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param4 = mstag.services.SenderFaultReason.fromValue(senderFaultReason);
					}
					throw new mstag.services.SenderFault_Exception(errorMessage_param4, reason_param4);
				}
			}
			throw e;
		}
		java.lang.Boolean result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object createCategoryResultObj = ((Object[])resultObj)[0];
		result = (java.lang.Boolean)createCategoryResultObj;
		return result;
	}

	public java.lang.Boolean updateCategory(mstag.services.UserCredential userCredential, java.lang.String existingCategoryName, mstag.services.Category category) throws java.rmi.RemoteException, mstag.services.UserAuthFault_Exception, mstag.services.ReceiverFault_Exception, mstag.services.SenderFault_Exception, mstag.services.CategoryFault_Exception {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[3];
		Object[] userCredentialObject;
		if (userCredential == null) {
			userCredentialObject = null;
		} else {
			userCredentialObject = new Object[1];
			userCredentialObject[0] = userCredential.getAccessToken();
		}
		inputObject[0] = userCredentialObject;
		inputObject[1] = existingCategoryName;
		Object[] categoryObject;
		if (category == null) {
			categoryObject = null;
		} else {
			categoryObject = new Object[4];
			categoryObject[0] = category.getName();
			categoryObject[1] = Util.toSOAPString(category.getUTCStartDate());
			categoryObject[2] = Util.toSOAPString(category.getUTCEndDate());
			categoryObject[3] = category.getCategoryStatus().getValue();
		}
		inputObject[2] = categoryObject;

		Operation op = Operation.newInstance(_qname__UpdateCategory, _type_UpdateCategory, _type_UpdateCategoryResponse, this);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://www.ws.tag.microsoft.com/ver1/IMIBPContract/UpdateCategory");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			} else if (cause instanceof FaultDetailException) {
				FaultDetailException fde = (FaultDetailException) cause;
				QName fdeName = fde.getFaultDetailName();
				if ("UserAuthFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param;
					errorMessage_param = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.UserAuthFaultReason reason_param;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param = null;
					} else {
						java.lang.String userAuthFaultReason;
						userAuthFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param = mstag.services.UserAuthFaultReason.fromValue(userAuthFaultReason);
					}
					throw new mstag.services.UserAuthFault_Exception(errorMessage_param, reason_param);
				}
				if ("ReceiverFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param2;
					errorMessage_param2 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.ReceiverFaultReason reason_param2;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param2 = null;
					} else {
						java.lang.String receiverFaultReason;
						receiverFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param2 = mstag.services.ReceiverFaultReason.fromValue(receiverFaultReason);
					}
					throw new mstag.services.ReceiverFault_Exception(errorMessage_param2, reason_param2);
				}
				if ("SenderFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param3;
					errorMessage_param3 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.SenderFaultReason reason_param3;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param3 = null;
					} else {
						java.lang.String senderFaultReason;
						senderFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param3 = mstag.services.SenderFaultReason.fromValue(senderFaultReason);
					}
					throw new mstag.services.SenderFault_Exception(errorMessage_param3, reason_param3);
				}
				if ("CategoryFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param4;
					errorMessage_param4 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.CategoryFaultReason reason_param4;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param4 = null;
					} else {
						java.lang.String categoryFaultReason;
						categoryFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param4 = mstag.services.CategoryFaultReason.fromValue(categoryFaultReason);
					}
					throw new mstag.services.CategoryFault_Exception(errorMessage_param4, reason_param4);
				}
			}
			throw e;
		}
		java.lang.Boolean result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object updateCategoryResultObj = ((Object[])resultObj)[0];
		result = (java.lang.Boolean)updateCategoryResultObj;
		return result;
	}

	public java.lang.Boolean activateCategory(mstag.services.UserCredential userCredential, java.lang.String categoryName) throws java.rmi.RemoteException, mstag.services.CategoryFault_Exception, mstag.services.UserAuthFault_Exception, mstag.services.ReceiverFault_Exception, mstag.services.SenderFault_Exception {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[2];
		Object[] userCredentialObject;
		if (userCredential == null) {
			userCredentialObject = null;
		} else {
			userCredentialObject = new Object[1];
			userCredentialObject[0] = userCredential.getAccessToken();
		}
		inputObject[0] = userCredentialObject;
		inputObject[1] = categoryName;

		Operation op = Operation.newInstance(_qname__ActivateCategory, _type_ActivateCategory, _type_ActivateCategoryResponse, this);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://www.ws.tag.microsoft.com/ver1/IMIBPContract/ActivateCategory");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			} else if (cause instanceof FaultDetailException) {
				FaultDetailException fde = (FaultDetailException) cause;
				QName fdeName = fde.getFaultDetailName();
				if ("CategoryFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param;
					errorMessage_param = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.CategoryFaultReason reason_param;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param = null;
					} else {
						java.lang.String categoryFaultReason;
						categoryFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param = mstag.services.CategoryFaultReason.fromValue(categoryFaultReason);
					}
					throw new mstag.services.CategoryFault_Exception(errorMessage_param, reason_param);
				}
				if ("UserAuthFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param2;
					errorMessage_param2 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.UserAuthFaultReason reason_param2;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param2 = null;
					} else {
						java.lang.String userAuthFaultReason;
						userAuthFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param2 = mstag.services.UserAuthFaultReason.fromValue(userAuthFaultReason);
					}
					throw new mstag.services.UserAuthFault_Exception(errorMessage_param2, reason_param2);
				}
				if ("ReceiverFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param3;
					errorMessage_param3 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.ReceiverFaultReason reason_param3;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param3 = null;
					} else {
						java.lang.String receiverFaultReason;
						receiverFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param3 = mstag.services.ReceiverFaultReason.fromValue(receiverFaultReason);
					}
					throw new mstag.services.ReceiverFault_Exception(errorMessage_param3, reason_param3);
				}
				if ("SenderFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param4;
					errorMessage_param4 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.SenderFaultReason reason_param4;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param4 = null;
					} else {
						java.lang.String senderFaultReason;
						senderFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param4 = mstag.services.SenderFaultReason.fromValue(senderFaultReason);
					}
					throw new mstag.services.SenderFault_Exception(errorMessage_param4, reason_param4);
				}
			}
			throw e;
		}
		java.lang.Boolean result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object activateCategoryResultObj = ((Object[])resultObj)[0];
		result = (java.lang.Boolean)activateCategoryResultObj;
		return result;
	}

	public java.lang.Boolean pauseCategory(mstag.services.UserCredential userCredential, java.lang.String categoryName) throws java.rmi.RemoteException, mstag.services.ReceiverFault_Exception, mstag.services.UserAuthFault_Exception, mstag.services.CategoryFault_Exception, mstag.services.SenderFault_Exception {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[2];
		Object[] userCredentialObject;
		if (userCredential == null) {
			userCredentialObject = null;
		} else {
			userCredentialObject = new Object[1];
			userCredentialObject[0] = userCredential.getAccessToken();
		}
		inputObject[0] = userCredentialObject;
		inputObject[1] = categoryName;

		Operation op = Operation.newInstance(_qname__PauseCategory, _type_PauseCategory, _type_PauseCategoryResponse, this);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://www.ws.tag.microsoft.com/ver1/IMIBPContract/PauseCategory");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			} else if (cause instanceof FaultDetailException) {
				FaultDetailException fde = (FaultDetailException) cause;
				QName fdeName = fde.getFaultDetailName();
				if ("ReceiverFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param;
					errorMessage_param = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.ReceiverFaultReason reason_param;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param = null;
					} else {
						java.lang.String receiverFaultReason;
						receiverFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param = mstag.services.ReceiverFaultReason.fromValue(receiverFaultReason);
					}
					throw new mstag.services.ReceiverFault_Exception(errorMessage_param, reason_param);
				}
				if ("UserAuthFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param2;
					errorMessage_param2 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.UserAuthFaultReason reason_param2;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param2 = null;
					} else {
						java.lang.String userAuthFaultReason;
						userAuthFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param2 = mstag.services.UserAuthFaultReason.fromValue(userAuthFaultReason);
					}
					throw new mstag.services.UserAuthFault_Exception(errorMessage_param2, reason_param2);
				}
				if ("CategoryFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param3;
					errorMessage_param3 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.CategoryFaultReason reason_param3;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param3 = null;
					} else {
						java.lang.String categoryFaultReason;
						categoryFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param3 = mstag.services.CategoryFaultReason.fromValue(categoryFaultReason);
					}
					throw new mstag.services.CategoryFault_Exception(errorMessage_param3, reason_param3);
				}
				if ("SenderFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param4;
					errorMessage_param4 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.SenderFaultReason reason_param4;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param4 = null;
					} else {
						java.lang.String senderFaultReason;
						senderFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param4 = mstag.services.SenderFaultReason.fromValue(senderFaultReason);
					}
					throw new mstag.services.SenderFault_Exception(errorMessage_param4, reason_param4);
				}
			}
			throw e;
		}
		java.lang.Boolean result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object pauseCategoryResultObj = ((Object[])resultObj)[0];
		result = (java.lang.Boolean)pauseCategoryResultObj;
		return result;
	}

	public java.lang.Boolean createTag(mstag.services.UserCredential userCredential, java.lang.String categoryName, mstag.services.Tag tag) throws java.rmi.RemoteException, mstag.services.ReceiverFault_Exception, mstag.services.UserAuthFault_Exception, mstag.services.CategoryFault_Exception, mstag.services.TagFault_Exception, mstag.services.SenderFault_Exception {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[3];
		Object[] userCredentialObject;
		if (userCredential == null) {
			userCredentialObject = null;
		} else {
			userCredentialObject = new Object[1];
			userCredentialObject[0] = userCredential.getAccessToken();
		}
		inputObject[0] = userCredentialObject;
		inputObject[1] = categoryName;
		Object[] tagObject;
		if (tag == null) {
			tagObject = null;
		} else {
			tagObject = new Object[7];
			tagObject[0] = tag.getTitle();
			tagObject[1] = tag.getInteractionNote();
			tagObject[2] = tag.getStatus().getValue();
			tagObject[3] = tag.getTypes();
			tagObject[4] = Util.toSOAPString(tag.getUTCStartDate());
			tagObject[5] = Util.toSOAPString(tag.getUTCEndDate());
			tagObject[6] = tag.getAssociatedPayload();
		}
		inputObject[2] = tagObject;

		Operation op = Operation.newInstance(_qname__CreateTag, _type_CreateTag, _type_CreateTagResponse, this);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://www.ws.tag.microsoft.com/ver1/IMIBPContract/CreateTag");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			} else if (cause instanceof FaultDetailException) {
				FaultDetailException fde = (FaultDetailException) cause;
				QName fdeName = fde.getFaultDetailName();
				if ("ReceiverFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param;
					errorMessage_param = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.ReceiverFaultReason reason_param;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param = null;
					} else {
						java.lang.String receiverFaultReason;
						receiverFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param = mstag.services.ReceiverFaultReason.fromValue(receiverFaultReason);
					}
					throw new mstag.services.ReceiverFault_Exception(errorMessage_param, reason_param);
				}
				if ("UserAuthFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param2;
					errorMessage_param2 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.UserAuthFaultReason reason_param2;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param2 = null;
					} else {
						java.lang.String userAuthFaultReason;
						userAuthFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param2 = mstag.services.UserAuthFaultReason.fromValue(userAuthFaultReason);
					}
					throw new mstag.services.UserAuthFault_Exception(errorMessage_param2, reason_param2);
				}
				if ("CategoryFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param3;
					errorMessage_param3 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.CategoryFaultReason reason_param3;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param3 = null;
					} else {
						java.lang.String categoryFaultReason;
						categoryFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param3 = mstag.services.CategoryFaultReason.fromValue(categoryFaultReason);
					}
					throw new mstag.services.CategoryFault_Exception(errorMessage_param3, reason_param3);
				}
				if ("TagFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param4;
					errorMessage_param4 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.TagFaultReason reason_param4;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param4 = null;
					} else {
						java.lang.String tagFaultReason;
						tagFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param4 = mstag.services.TagFaultReason.fromValue(tagFaultReason);
					}
					throw new mstag.services.TagFault_Exception(errorMessage_param4, reason_param4);
				}
				if ("SenderFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param5;
					errorMessage_param5 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.SenderFaultReason reason_param5;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param5 = null;
					} else {
						java.lang.String senderFaultReason;
						senderFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param5 = mstag.services.SenderFaultReason.fromValue(senderFaultReason);
					}
					throw new mstag.services.SenderFault_Exception(errorMessage_param5, reason_param5);
				}
			}
			throw e;
		}
		java.lang.Boolean result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object createTagResultObj = ((Object[])resultObj)[0];
		result = (java.lang.Boolean)createTagResultObj;
		return result;
	}

	public java.lang.Boolean activateTag(mstag.services.UserCredential userCredential, java.lang.String categoryName, java.lang.String tagName) throws java.rmi.RemoteException, mstag.services.SenderFault_Exception, mstag.services.UserAuthFault_Exception, mstag.services.TagFault_Exception, mstag.services.CategoryFault_Exception, mstag.services.ReceiverFault_Exception {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[3];
		Object[] userCredentialObject;
		if (userCredential == null) {
			userCredentialObject = null;
		} else {
			userCredentialObject = new Object[1];
			userCredentialObject[0] = userCredential.getAccessToken();
		}
		inputObject[0] = userCredentialObject;
		inputObject[1] = categoryName;
		inputObject[2] = tagName;

		Operation op = Operation.newInstance(_qname__ActivateTag, _type_ActivateTag, _type_ActivateTagResponse, this);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://www.ws.tag.microsoft.com/ver1/IMIBPContract/ActivateTag");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			} else if (cause instanceof FaultDetailException) {
				FaultDetailException fde = (FaultDetailException) cause;
				QName fdeName = fde.getFaultDetailName();
				if ("SenderFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param;
					errorMessage_param = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.SenderFaultReason reason_param;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param = null;
					} else {
						java.lang.String senderFaultReason;
						senderFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param = mstag.services.SenderFaultReason.fromValue(senderFaultReason);
					}
					throw new mstag.services.SenderFault_Exception(errorMessage_param, reason_param);
				}
				if ("UserAuthFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param2;
					errorMessage_param2 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.UserAuthFaultReason reason_param2;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param2 = null;
					} else {
						java.lang.String userAuthFaultReason;
						userAuthFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param2 = mstag.services.UserAuthFaultReason.fromValue(userAuthFaultReason);
					}
					throw new mstag.services.UserAuthFault_Exception(errorMessage_param2, reason_param2);
				}
				if ("TagFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param3;
					errorMessage_param3 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.TagFaultReason reason_param3;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param3 = null;
					} else {
						java.lang.String tagFaultReason;
						tagFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param3 = mstag.services.TagFaultReason.fromValue(tagFaultReason);
					}
					throw new mstag.services.TagFault_Exception(errorMessage_param3, reason_param3);
				}
				if ("CategoryFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param4;
					errorMessage_param4 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.CategoryFaultReason reason_param4;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param4 = null;
					} else {
						java.lang.String categoryFaultReason;
						categoryFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param4 = mstag.services.CategoryFaultReason.fromValue(categoryFaultReason);
					}
					throw new mstag.services.CategoryFault_Exception(errorMessage_param4, reason_param4);
				}
				if ("ReceiverFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param5;
					errorMessage_param5 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.ReceiverFaultReason reason_param5;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param5 = null;
					} else {
						java.lang.String receiverFaultReason;
						receiverFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param5 = mstag.services.ReceiverFaultReason.fromValue(receiverFaultReason);
					}
					throw new mstag.services.ReceiverFault_Exception(errorMessage_param5, reason_param5);
				}
			}
			throw e;
		}
		java.lang.Boolean result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object activateTagResultObj = ((Object[])resultObj)[0];
		result = (java.lang.Boolean)activateTagResultObj;
		return result;
	}

	public java.lang.Boolean pauseTag(mstag.services.UserCredential userCredential, java.lang.String categoryName, java.lang.String tagName) throws java.rmi.RemoteException, mstag.services.UserAuthFault_Exception, mstag.services.ReceiverFault_Exception, mstag.services.SenderFault_Exception, mstag.services.TagFault_Exception, mstag.services.CategoryFault_Exception {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[3];
		Object[] userCredentialObject;
		if (userCredential == null) {
			userCredentialObject = null;
		} else {
			userCredentialObject = new Object[1];
			userCredentialObject[0] = userCredential.getAccessToken();
		}
		inputObject[0] = userCredentialObject;
		inputObject[1] = categoryName;
		inputObject[2] = tagName;

		Operation op = Operation.newInstance(_qname__PauseTag, _type_PauseTag, _type_PauseTagResponse, this);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://www.ws.tag.microsoft.com/ver1/IMIBPContract/PauseTag");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			} else if (cause instanceof FaultDetailException) {
				FaultDetailException fde = (FaultDetailException) cause;
				QName fdeName = fde.getFaultDetailName();
				if ("UserAuthFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param;
					errorMessage_param = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.UserAuthFaultReason reason_param;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param = null;
					} else {
						java.lang.String userAuthFaultReason;
						userAuthFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param = mstag.services.UserAuthFaultReason.fromValue(userAuthFaultReason);
					}
					throw new mstag.services.UserAuthFault_Exception(errorMessage_param, reason_param);
				}
				if ("ReceiverFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param2;
					errorMessage_param2 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.ReceiverFaultReason reason_param2;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param2 = null;
					} else {
						java.lang.String receiverFaultReason;
						receiverFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param2 = mstag.services.ReceiverFaultReason.fromValue(receiverFaultReason);
					}
					throw new mstag.services.ReceiverFault_Exception(errorMessage_param2, reason_param2);
				}
				if ("SenderFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param3;
					errorMessage_param3 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.SenderFaultReason reason_param3;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param3 = null;
					} else {
						java.lang.String senderFaultReason;
						senderFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param3 = mstag.services.SenderFaultReason.fromValue(senderFaultReason);
					}
					throw new mstag.services.SenderFault_Exception(errorMessage_param3, reason_param3);
				}
				if ("TagFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param4;
					errorMessage_param4 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.TagFaultReason reason_param4;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param4 = null;
					} else {
						java.lang.String tagFaultReason;
						tagFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param4 = mstag.services.TagFaultReason.fromValue(tagFaultReason);
					}
					throw new mstag.services.TagFault_Exception(errorMessage_param4, reason_param4);
				}
				if ("CategoryFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param5;
					errorMessage_param5 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.CategoryFaultReason reason_param5;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param5 = null;
					} else {
						java.lang.String categoryFaultReason;
						categoryFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param5 = mstag.services.CategoryFaultReason.fromValue(categoryFaultReason);
					}
					throw new mstag.services.CategoryFault_Exception(errorMessage_param5, reason_param5);
				}
			}
			throw e;
		}
		java.lang.Boolean result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object pauseTagResultObj = ((Object[])resultObj)[0];
		result = (java.lang.Boolean)pauseTagResultObj;
		return result;
	}

	public java.lang.Boolean deleteTag(mstag.services.UserCredential userCredential, java.lang.String categoryName, java.lang.String tagName) throws java.rmi.RemoteException, mstag.services.CategoryFault_Exception, mstag.services.SenderFault_Exception, mstag.services.TagFault_Exception, mstag.services.ReceiverFault_Exception, mstag.services.UserAuthFault_Exception {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[3];
		Object[] userCredentialObject;
		if (userCredential == null) {
			userCredentialObject = null;
		} else {
			userCredentialObject = new Object[1];
			userCredentialObject[0] = userCredential.getAccessToken();
		}
		inputObject[0] = userCredentialObject;
		inputObject[1] = categoryName;
		inputObject[2] = tagName;

		Operation op = Operation.newInstance(_qname__DeleteTag, _type_DeleteTag, _type_DeleteTagResponse, this);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://www.ws.tag.microsoft.com/ver1/IMIBPContract/DeleteTag");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			} else if (cause instanceof FaultDetailException) {
				FaultDetailException fde = (FaultDetailException) cause;
				QName fdeName = fde.getFaultDetailName();
				if ("CategoryFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param;
					errorMessage_param = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.CategoryFaultReason reason_param;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param = null;
					} else {
						java.lang.String categoryFaultReason;
						categoryFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param = mstag.services.CategoryFaultReason.fromValue(categoryFaultReason);
					}
					throw new mstag.services.CategoryFault_Exception(errorMessage_param, reason_param);
				}
				if ("SenderFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param2;
					errorMessage_param2 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.SenderFaultReason reason_param2;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param2 = null;
					} else {
						java.lang.String senderFaultReason;
						senderFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param2 = mstag.services.SenderFaultReason.fromValue(senderFaultReason);
					}
					throw new mstag.services.SenderFault_Exception(errorMessage_param2, reason_param2);
				}
				if ("TagFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param3;
					errorMessage_param3 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.TagFaultReason reason_param3;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param3 = null;
					} else {
						java.lang.String tagFaultReason;
						tagFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param3 = mstag.services.TagFaultReason.fromValue(tagFaultReason);
					}
					throw new mstag.services.TagFault_Exception(errorMessage_param3, reason_param3);
				}
				if ("ReceiverFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param4;
					errorMessage_param4 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.ReceiverFaultReason reason_param4;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param4 = null;
					} else {
						java.lang.String receiverFaultReason;
						receiverFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param4 = mstag.services.ReceiverFaultReason.fromValue(receiverFaultReason);
					}
					throw new mstag.services.ReceiverFault_Exception(errorMessage_param4, reason_param4);
				}
				if ("UserAuthFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param5;
					errorMessage_param5 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.UserAuthFaultReason reason_param5;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param5 = null;
					} else {
						java.lang.String userAuthFaultReason;
						userAuthFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param5 = mstag.services.UserAuthFaultReason.fromValue(userAuthFaultReason);
					}
					throw new mstag.services.UserAuthFault_Exception(errorMessage_param5, reason_param5);
				}
			}
			throw e;
		}
		java.lang.Boolean result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object deleteTagResultObj = ((Object[])resultObj)[0];
		result = (java.lang.Boolean)deleteTagResultObj;
		return result;
	}

	public java.lang.Boolean updateTag(mstag.services.UserCredential userCredential, java.lang.String categoryName, java.lang.String existingTagName, mstag.services.Tag tag) throws java.rmi.RemoteException, mstag.services.UserAuthFault_Exception, mstag.services.CategoryFault_Exception, mstag.services.SenderFault_Exception, mstag.services.ReceiverFault_Exception, mstag.services.TagFault_Exception {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[4];
		Object[] userCredentialObject;
		if (userCredential == null) {
			userCredentialObject = null;
		} else {
			userCredentialObject = new Object[1];
			userCredentialObject[0] = userCredential.getAccessToken();
		}
		inputObject[0] = userCredentialObject;
		inputObject[1] = categoryName;
		inputObject[2] = existingTagName;
		Object[] tagObject;
		if (tag == null) {
			tagObject = null;
		} else {
			tagObject = new Object[7];
			tagObject[0] = tag.getTitle();
			tagObject[1] = tag.getInteractionNote();
			tagObject[2] = tag.getStatus().getValue();
			tagObject[3] = tag.getTypes();
			tagObject[4] = Util.toSOAPString(tag.getUTCStartDate());
			tagObject[5] = Util.toSOAPString(tag.getUTCEndDate());
			tagObject[6] = tag.getAssociatedPayload();
		}
		inputObject[3] = tagObject;

		Operation op = Operation.newInstance(_qname__UpdateTag, _type_UpdateTag, _type_UpdateTagResponse, this);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://www.ws.tag.microsoft.com/ver1/IMIBPContract/UpdateTag");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			} else if (cause instanceof FaultDetailException) {
				FaultDetailException fde = (FaultDetailException) cause;
				QName fdeName = fde.getFaultDetailName();
				if ("UserAuthFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param;
					errorMessage_param = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.UserAuthFaultReason reason_param;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param = null;
					} else {
						java.lang.String userAuthFaultReason;
						userAuthFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param = mstag.services.UserAuthFaultReason.fromValue(userAuthFaultReason);
					}
					throw new mstag.services.UserAuthFault_Exception(errorMessage_param, reason_param);
				}
				if ("CategoryFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param2;
					errorMessage_param2 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.CategoryFaultReason reason_param2;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param2 = null;
					} else {
						java.lang.String categoryFaultReason;
						categoryFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param2 = mstag.services.CategoryFaultReason.fromValue(categoryFaultReason);
					}
					throw new mstag.services.CategoryFault_Exception(errorMessage_param2, reason_param2);
				}
				if ("SenderFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param3;
					errorMessage_param3 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.SenderFaultReason reason_param3;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param3 = null;
					} else {
						java.lang.String senderFaultReason;
						senderFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param3 = mstag.services.SenderFaultReason.fromValue(senderFaultReason);
					}
					throw new mstag.services.SenderFault_Exception(errorMessage_param3, reason_param3);
				}
				if ("ReceiverFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param4;
					errorMessage_param4 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.ReceiverFaultReason reason_param4;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param4 = null;
					} else {
						java.lang.String receiverFaultReason;
						receiverFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param4 = mstag.services.ReceiverFaultReason.fromValue(receiverFaultReason);
					}
					throw new mstag.services.ReceiverFault_Exception(errorMessage_param4, reason_param4);
				}
				if ("TagFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param5;
					errorMessage_param5 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.TagFaultReason reason_param5;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param5 = null;
					} else {
						java.lang.String tagFaultReason;
						tagFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param5 = mstag.services.TagFaultReason.fromValue(tagFaultReason);
					}
					throw new mstag.services.TagFault_Exception(errorMessage_param5, reason_param5);
				}
			}
			throw e;
		}
		java.lang.Boolean result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object updateTagResultObj = ((Object[])resultObj)[0];
		result = (java.lang.Boolean)updateTagResultObj;
		return result;
	}

	public byte[] getBarcode(mstag.services.UserCredential userCredential, java.lang.String categoryName, java.lang.String tagName, java.lang.String[] imageType, java.lang.Float sizeInInches, mstag.services.DecorationType decorationsType, java.lang.Boolean isBlackWhite) throws java.rmi.RemoteException, mstag.services.ReceiverFault_Exception, mstag.services.CategoryFault_Exception, mstag.services.BarCodeFault_Exception, mstag.services.TagFault_Exception, mstag.services.UserAuthFault_Exception, mstag.services.SenderFault_Exception {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[7];
		Object[] userCredentialObject;
		if (userCredential == null) {
			userCredentialObject = null;
		} else {
			userCredentialObject = new Object[1];
			userCredentialObject[0] = userCredential.getAccessToken();
		}
		inputObject[0] = userCredentialObject;
		inputObject[1] = categoryName;
		inputObject[2] = tagName;
		inputObject[3] = imageType;
		inputObject[4] = sizeInInches;
		inputObject[5] = decorationsType.getValue();
		inputObject[6] = isBlackWhite;

		Operation op = Operation.newInstance(_qname__GetBarcode, _type_GetBarcode, _type_GetBarcodeResponse, this);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://www.ws.tag.microsoft.com/ver1/IMIBPContract/GetBarcode");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			} else if (cause instanceof FaultDetailException) {
				FaultDetailException fde = (FaultDetailException) cause;
				QName fdeName = fde.getFaultDetailName();
				if ("ReceiverFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param;
					errorMessage_param = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.ReceiverFaultReason reason_param;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param = null;
					} else {
						java.lang.String receiverFaultReason;
						receiverFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param = mstag.services.ReceiverFaultReason.fromValue(receiverFaultReason);
					}
					throw new mstag.services.ReceiverFault_Exception(errorMessage_param, reason_param);
				}
				if ("CategoryFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param2;
					errorMessage_param2 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.CategoryFaultReason reason_param2;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param2 = null;
					} else {
						java.lang.String categoryFaultReason;
						categoryFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param2 = mstag.services.CategoryFaultReason.fromValue(categoryFaultReason);
					}
					throw new mstag.services.CategoryFault_Exception(errorMessage_param2, reason_param2);
				}
				if ("BarCodeFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param3;
					errorMessage_param3 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.BarCodeFaultReason reason_param3;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param3 = null;
					} else {
						java.lang.String barCodeFaultReason;
						barCodeFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param3 = mstag.services.BarCodeFaultReason.fromValue(barCodeFaultReason);
					}
					throw new mstag.services.BarCodeFault_Exception(errorMessage_param3, reason_param3);
				}
				if ("TagFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param4;
					errorMessage_param4 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.TagFaultReason reason_param4;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param4 = null;
					} else {
						java.lang.String tagFaultReason;
						tagFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param4 = mstag.services.TagFaultReason.fromValue(tagFaultReason);
					}
					throw new mstag.services.TagFault_Exception(errorMessage_param4, reason_param4);
				}
				if ("UserAuthFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param5;
					errorMessage_param5 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.UserAuthFaultReason reason_param5;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param5 = null;
					} else {
						java.lang.String userAuthFaultReason;
						userAuthFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param5 = mstag.services.UserAuthFaultReason.fromValue(userAuthFaultReason);
					}
					throw new mstag.services.UserAuthFault_Exception(errorMessage_param5, reason_param5);
				}
				if ("SenderFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param6;
					errorMessage_param6 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.SenderFaultReason reason_param6;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param6 = null;
					} else {
						java.lang.String senderFaultReason;
						senderFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param6 = mstag.services.SenderFaultReason.fromValue(senderFaultReason);
					}
					throw new mstag.services.SenderFault_Exception(errorMessage_param6, reason_param6);
				}
			}
			throw e;
		}
		byte[] result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object getBarcodeResultObj = ((Object[])resultObj)[0];
		try
		{
			result = Base64InputStream.decode((String)getBarcodeResultObj);
		}
		catch (IOException e)
		{
			result = null;
		}
		return result;
	}

	public java.lang.String getTagId(mstag.services.UserCredential userCredential, java.lang.String categoryName, java.lang.String tagName) throws java.rmi.RemoteException, mstag.services.ReceiverFault_Exception, mstag.services.UserAuthFault_Exception, mstag.services.CategoryFault_Exception, mstag.services.TagFault_Exception, mstag.services.SenderFault_Exception {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[3];
		Object[] userCredentialObject;
		if (userCredential == null) {
			userCredentialObject = null;
		} else {
			userCredentialObject = new Object[1];
			userCredentialObject[0] = userCredential.getAccessToken();
		}
		inputObject[0] = userCredentialObject;
		inputObject[1] = categoryName;
		inputObject[2] = tagName;

		Operation op = Operation.newInstance(_qname__GetTagId, _type_GetTagId, _type_GetTagIdResponse, this);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://www.ws.tag.microsoft.com/ver1/IMIBPContract/GetTagId");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			} else if (cause instanceof FaultDetailException) {
				FaultDetailException fde = (FaultDetailException) cause;
				QName fdeName = fde.getFaultDetailName();
				if ("ReceiverFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param;
					errorMessage_param = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.ReceiverFaultReason reason_param;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param = null;
					} else {
						java.lang.String receiverFaultReason;
						receiverFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param = mstag.services.ReceiverFaultReason.fromValue(receiverFaultReason);
					}
					throw new mstag.services.ReceiverFault_Exception(errorMessage_param, reason_param);
				}
				if ("UserAuthFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param2;
					errorMessage_param2 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.UserAuthFaultReason reason_param2;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param2 = null;
					} else {
						java.lang.String userAuthFaultReason;
						userAuthFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param2 = mstag.services.UserAuthFaultReason.fromValue(userAuthFaultReason);
					}
					throw new mstag.services.UserAuthFault_Exception(errorMessage_param2, reason_param2);
				}
				if ("CategoryFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param3;
					errorMessage_param3 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.CategoryFaultReason reason_param3;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param3 = null;
					} else {
						java.lang.String categoryFaultReason;
						categoryFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param3 = mstag.services.CategoryFaultReason.fromValue(categoryFaultReason);
					}
					throw new mstag.services.CategoryFault_Exception(errorMessage_param3, reason_param3);
				}
				if ("TagFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param4;
					errorMessage_param4 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.TagFaultReason reason_param4;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param4 = null;
					} else {
						java.lang.String tagFaultReason;
						tagFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param4 = mstag.services.TagFaultReason.fromValue(tagFaultReason);
					}
					throw new mstag.services.TagFault_Exception(errorMessage_param4, reason_param4);
				}
				if ("SenderFaultFault".equals(fdeName.getLocalPart()) && "".equals(fdeName.getNamespaceURI())) {
					java.lang.String errorMessage_param5;
					errorMessage_param5 = (java.lang.String)((Object[])fde.getFaultDetail())[0];
					mstag.services.SenderFaultReason reason_param5;
					if (((Object[])fde.getFaultDetail())[1] == null) {
						reason_param5 = null;
					} else {
						java.lang.String senderFaultReason;
						senderFaultReason = (java.lang.String)((Object[])fde.getFaultDetail())[1];
						reason_param5 = mstag.services.SenderFaultReason.fromValue(senderFaultReason);
					}
					throw new mstag.services.SenderFault_Exception(errorMessage_param5, reason_param5);
				}
			}
			throw e;
		}
		java.lang.String result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object getTagIdResultObj = ((Object[])resultObj)[0];
		result = (java.lang.String)getTagIdResultObj;
		return result;
	}
	// 
	//  End user methods
	// 

	protected static final QName _qname_BarCodeFaultFault = new QName("", "BarCodeFaultFault");
	protected static final QName _qname_CategoryFaultFault = new QName("", "CategoryFaultFault");
	protected static final QName _qname_ReceiverFaultFault = new QName("", "ReceiverFaultFault");
	protected static final QName _qname_SenderFaultFault = new QName("", "SenderFaultFault");
	protected static final QName _qname_TagFaultFault = new QName("", "TagFaultFault");
	protected static final QName _qname_UserAuthFaultFault = new QName("", "UserAuthFaultFault");
	protected static final QName _qname__ActivateCategory = new QName("http://tempuri.org/", "ActivateCategory");
	protected static final QName _qname__ActivateTag = new QName("http://tempuri.org/", "ActivateTag");
	protected static final QName _qname__CreateCategory = new QName("http://tempuri.org/", "CreateCategory");
	protected static final QName _qname__CreateTag = new QName("http://tempuri.org/", "CreateTag");
	protected static final QName _qname__DeleteTag = new QName("http://tempuri.org/", "DeleteTag");
	protected static final QName _qname__GetBarcode = new QName("http://tempuri.org/", "GetBarcode");
	protected static final QName _qname__GetTagId = new QName("http://tempuri.org/", "GetTagId");
	protected static final QName _qname__PauseCategory = new QName("http://tempuri.org/", "PauseCategory");
	protected static final QName _qname__PauseTag = new QName("http://tempuri.org/", "PauseTag");
	protected static final QName _qname__UpdateCategory = new QName("http://tempuri.org/", "UpdateCategory");
	protected static final QName _qname__UpdateTag = new QName("http://tempuri.org/", "UpdateTag");
	protected static final QName _qname_AccessToken = new QName("http://www.ws.tag.microsoft.com/ver1", "AccessToken");
	protected static final QName _qname_ActivateCategory = new QName("http://www.ws.tag.microsoft.com/ver1", "ActivateCategory");
	protected static final QName _qname_ActivateCategoryResponse = new QName("http://www.ws.tag.microsoft.com/ver1", "ActivateCategoryResponse");
	protected static final QName _qname_ActivateCategoryResult = new QName("http://www.ws.tag.microsoft.com/ver1", "ActivateCategoryResult");
	protected static final QName _qname_ActivateTag = new QName("http://www.ws.tag.microsoft.com/ver1", "ActivateTag");
	protected static final QName _qname_ActivateTagResponse = new QName("http://www.ws.tag.microsoft.com/ver1", "ActivateTagResponse");
	protected static final QName _qname_ActivateTagResult = new QName("http://www.ws.tag.microsoft.com/ver1", "ActivateTagResult");
	protected static final QName _qname_AssociatedPayload = new QName("http://www.ws.tag.microsoft.com/ver1", "AssociatedPayload");
	protected static final QName _qname_CategoryStatus = new QName("http://www.ws.tag.microsoft.com/ver1", "CategoryStatus");
	protected static final QName _qname_CreateCategory = new QName("http://www.ws.tag.microsoft.com/ver1", "CreateCategory");
	protected static final QName _qname_CreateCategoryResponse = new QName("http://www.ws.tag.microsoft.com/ver1", "CreateCategoryResponse");
	protected static final QName _qname_CreateCategoryResult = new QName("http://www.ws.tag.microsoft.com/ver1", "CreateCategoryResult");
	protected static final QName _qname_CreateTag = new QName("http://www.ws.tag.microsoft.com/ver1", "CreateTag");
	protected static final QName _qname_CreateTagResponse = new QName("http://www.ws.tag.microsoft.com/ver1", "CreateTagResponse");
	protected static final QName _qname_CreateTagResult = new QName("http://www.ws.tag.microsoft.com/ver1", "CreateTagResult");
	protected static final QName _qname_DeleteTag = new QName("http://www.ws.tag.microsoft.com/ver1", "DeleteTag");
	protected static final QName _qname_DeleteTagResponse = new QName("http://www.ws.tag.microsoft.com/ver1", "DeleteTagResponse");
	protected static final QName _qname_DeleteTagResult = new QName("http://www.ws.tag.microsoft.com/ver1", "DeleteTagResult");
	protected static final QName _qname_ErrorMessage = new QName("http://www.ws.tag.microsoft.com/ver1", "ErrorMessage");
	protected static final QName _qname_GetBarcode = new QName("http://www.ws.tag.microsoft.com/ver1", "GetBarcode");
	protected static final QName _qname_GetBarcodeResponse = new QName("http://www.ws.tag.microsoft.com/ver1", "GetBarcodeResponse");
	protected static final QName _qname_GetBarcodeResult = new QName("http://www.ws.tag.microsoft.com/ver1", "GetBarcodeResult");
	protected static final QName _qname_GetTagId = new QName("http://www.ws.tag.microsoft.com/ver1", "GetTagId");
	protected static final QName _qname_GetTagIdResponse = new QName("http://www.ws.tag.microsoft.com/ver1", "GetTagIdResponse");
	protected static final QName _qname_GetTagIdResult = new QName("http://www.ws.tag.microsoft.com/ver1", "GetTagIdResult");
	protected static final QName _qname_InteractionNote = new QName("http://www.ws.tag.microsoft.com/ver1", "InteractionNote");
	protected static final QName _qname_Name = new QName("http://www.ws.tag.microsoft.com/ver1", "Name");
	protected static final QName _qname_PauseCategory = new QName("http://www.ws.tag.microsoft.com/ver1", "PauseCategory");
	protected static final QName _qname_PauseCategoryResponse = new QName("http://www.ws.tag.microsoft.com/ver1", "PauseCategoryResponse");
	protected static final QName _qname_PauseCategoryResult = new QName("http://www.ws.tag.microsoft.com/ver1", "PauseCategoryResult");
	protected static final QName _qname_PauseTag = new QName("http://www.ws.tag.microsoft.com/ver1", "PauseTag");
	protected static final QName _qname_PauseTagResponse = new QName("http://www.ws.tag.microsoft.com/ver1", "PauseTagResponse");
	protected static final QName _qname_PauseTagResult = new QName("http://www.ws.tag.microsoft.com/ver1", "PauseTagResult");
	protected static final QName _qname_Reason = new QName("http://www.ws.tag.microsoft.com/ver1", "Reason");
	protected static final QName _qname_Status = new QName("http://www.ws.tag.microsoft.com/ver1", "Status");
	protected static final QName _qname_Title = new QName("http://www.ws.tag.microsoft.com/ver1", "Title");
	protected static final QName _qname_Types = new QName("http://www.ws.tag.microsoft.com/ver1", "Types");
	protected static final QName _qname_UTCEndDate = new QName("http://www.ws.tag.microsoft.com/ver1", "UTCEndDate");
	protected static final QName _qname_UTCStartDate = new QName("http://www.ws.tag.microsoft.com/ver1", "UTCStartDate");
	protected static final QName _qname_UpdateCategory = new QName("http://www.ws.tag.microsoft.com/ver1", "UpdateCategory");
	protected static final QName _qname_UpdateCategoryResponse = new QName("http://www.ws.tag.microsoft.com/ver1", "UpdateCategoryResponse");
	protected static final QName _qname_UpdateCategoryResult = new QName("http://www.ws.tag.microsoft.com/ver1", "UpdateCategoryResult");
	protected static final QName _qname_UpdateTag = new QName("http://www.ws.tag.microsoft.com/ver1", "UpdateTag");
	protected static final QName _qname_UpdateTagResponse = new QName("http://www.ws.tag.microsoft.com/ver1", "UpdateTagResponse");
	protected static final QName _qname_UpdateTagResult = new QName("http://www.ws.tag.microsoft.com/ver1", "UpdateTagResult");
	protected static final QName _qname_category = new QName("http://www.ws.tag.microsoft.com/ver1", "category");
	protected static final QName _qname_categoryName = new QName("http://www.ws.tag.microsoft.com/ver1", "categoryName");
	protected static final QName _qname_decorationsType = new QName("http://www.ws.tag.microsoft.com/ver1", "decorationsType");
	protected static final QName _qname_existingCategoryName = new QName("http://www.ws.tag.microsoft.com/ver1", "existingCategoryName");
	protected static final QName _qname_existingTagName = new QName("http://www.ws.tag.microsoft.com/ver1", "existingTagName");
	protected static final QName _qname_imageType = new QName("http://www.ws.tag.microsoft.com/ver1", "imageType");
	protected static final QName _qname_isBlackWhite = new QName("http://www.ws.tag.microsoft.com/ver1", "isBlackWhite");
	protected static final QName _qname_sizeInInches = new QName("http://www.ws.tag.microsoft.com/ver1", "sizeInInches");
	protected static final QName _qname_tag = new QName("http://www.ws.tag.microsoft.com/ver1", "tag");
	protected static final QName _qname_tagName = new QName("http://www.ws.tag.microsoft.com/ver1", "tagName");
	protected static final QName _qname_userCredential = new QName("http://www.ws.tag.microsoft.com/ver1", "userCredential");
	protected static final Element _type_CreateCategory;
	protected static final Element _type_CreateCategoryResponse;
	protected static final Element _type_ReceiverFaultFault;
	protected static final Element _type_UserAuthFaultFault;
	protected static final Element _type_CategoryFaultFault;
	protected static final Element _type_SenderFaultFault;
	protected static final Element _type_UpdateCategory;
	protected static final Element _type_UpdateCategoryResponse;
	protected static final Element _type_ActivateCategory;
	protected static final Element _type_ActivateCategoryResponse;
	protected static final Element _type_PauseCategory;
	protected static final Element _type_PauseCategoryResponse;
	protected static final Element _type_CreateTag;
	protected static final Element _type_CreateTagResponse;
	protected static final Element _type_TagFaultFault;
	protected static final Element _type_ActivateTag;
	protected static final Element _type_ActivateTagResponse;
	protected static final Element _type_PauseTag;
	protected static final Element _type_PauseTagResponse;
	protected static final Element _type_DeleteTag;
	protected static final Element _type_DeleteTagResponse;
	protected static final Element _type_UpdateTag;
	protected static final Element _type_UpdateTagResponse;
	protected static final Element _type_GetBarcode;
	protected static final Element _type_GetBarcodeResponse;
	protected static final Element _type_BarCodeFaultFault;
	protected static final Element _type_GetTagId;
	protected static final Element _type_GetTagIdResponse;
	static {
		// Create all of the Type's that this stub uses, once.
		Element _type_AccessToken;
		_type_AccessToken = new Element(_qname_AccessToken, Type.STRING, 1, 1, true);
		ComplexType _complexType_userCredential;
		_complexType_userCredential = new ComplexType();
		_complexType_userCredential.elements = new Element[1];
		_complexType_userCredential.elements[0] = _type_AccessToken;
		Element _type_userCredential;
		_type_userCredential = new Element(_qname_userCredential, _complexType_userCredential, 0, 1, true);
		Element _type_Name;
		_type_Name = new Element(_qname_Name, Type.STRING, 1, 1, true);
		Element _type_UTCStartDate;
		_type_UTCStartDate = new Element(_qname_UTCStartDate, Type.STRING);
		Element _type_UTCEndDate;
		_type_UTCEndDate = new Element(_qname_UTCEndDate, Type.STRING, 0, 1, true);
		Element _type_CategoryStatus;
		_type_CategoryStatus = new Element(_qname_CategoryStatus, Type.STRING, 0, 1, false);
		ComplexType _complexType_category;
		_complexType_category = new ComplexType();
		_complexType_category.elements = new Element[4];
		_complexType_category.elements[0] = _type_Name;
		_complexType_category.elements[1] = _type_UTCStartDate;
		_complexType_category.elements[2] = _type_UTCEndDate;
		_complexType_category.elements[3] = _type_CategoryStatus;
		Element _type_category;
		_type_category = new Element(_qname_category, _complexType_category, 0, 1, true);
		ComplexType _complexType_createCategory;
		_complexType_createCategory = new ComplexType();
		_complexType_createCategory.elements = new Element[2];
		_complexType_createCategory.elements[0] = _type_userCredential;
		_complexType_createCategory.elements[1] = _type_category;
		_type_CreateCategory = new Element(_qname_CreateCategory, _complexType_createCategory);
		Element _type_CreateCategoryResult;
		_type_CreateCategoryResult = new Element(_qname_CreateCategoryResult, Type.BOOLEAN, 0, 1, false);
		ComplexType _complexType_createCategoryResponse;
		_complexType_createCategoryResponse = new ComplexType();
		_complexType_createCategoryResponse.elements = new Element[1];
		_complexType_createCategoryResponse.elements[0] = _type_CreateCategoryResult;
		_type_CreateCategoryResponse = new Element(_qname_CreateCategoryResponse, _complexType_createCategoryResponse);
		Element _type_ErrorMessage;
		_type_ErrorMessage = new Element(_qname_ErrorMessage, Type.STRING, 1, 1, true);
		Element _type_Reason;
		_type_Reason = new Element(_qname_Reason, Type.STRING);
		ComplexType _complexType_receiverFault_Exception;
		_complexType_receiverFault_Exception = new ComplexType();
		_complexType_receiverFault_Exception.elements = new Element[2];
		_complexType_receiverFault_Exception.elements[0] = _type_ErrorMessage;
		_complexType_receiverFault_Exception.elements[1] = _type_Reason;
		_type_ReceiverFaultFault = new Element(_qname_ReceiverFaultFault, _complexType_receiverFault_Exception);
		_type_UserAuthFaultFault = new Element(_qname_UserAuthFaultFault, _complexType_receiverFault_Exception);
		_type_CategoryFaultFault = new Element(_qname_CategoryFaultFault, _complexType_receiverFault_Exception);
		_type_SenderFaultFault = new Element(_qname_SenderFaultFault, _complexType_receiverFault_Exception);
		Element _type_existingCategoryName;
		_type_existingCategoryName = new Element(_qname_existingCategoryName, Type.STRING, 0, 1, true);
		ComplexType _complexType_updateCategory;
		_complexType_updateCategory = new ComplexType();
		_complexType_updateCategory.elements = new Element[3];
		_complexType_updateCategory.elements[0] = _type_userCredential;
		_complexType_updateCategory.elements[1] = _type_existingCategoryName;
		_complexType_updateCategory.elements[2] = _type_category;
		_type_UpdateCategory = new Element(_qname_UpdateCategory, _complexType_updateCategory);
		Element _type_UpdateCategoryResult;
		_type_UpdateCategoryResult = new Element(_qname_UpdateCategoryResult, Type.BOOLEAN, 0, 1, false);
		ComplexType _complexType_updateCategoryResponse;
		_complexType_updateCategoryResponse = new ComplexType();
		_complexType_updateCategoryResponse.elements = new Element[1];
		_complexType_updateCategoryResponse.elements[0] = _type_UpdateCategoryResult;
		_type_UpdateCategoryResponse = new Element(_qname_UpdateCategoryResponse, _complexType_updateCategoryResponse);
		Element _type_categoryName;
		_type_categoryName = new Element(_qname_categoryName, Type.STRING, 0, 1, true);
		ComplexType _complexType_activateCategory;
		_complexType_activateCategory = new ComplexType();
		_complexType_activateCategory.elements = new Element[2];
		_complexType_activateCategory.elements[0] = _type_userCredential;
		_complexType_activateCategory.elements[1] = _type_categoryName;
		_type_ActivateCategory = new Element(_qname_ActivateCategory, _complexType_activateCategory);
		Element _type_ActivateCategoryResult;
		_type_ActivateCategoryResult = new Element(_qname_ActivateCategoryResult, Type.BOOLEAN, 0, 1, false);
		ComplexType _complexType_activateCategoryResponse;
		_complexType_activateCategoryResponse = new ComplexType();
		_complexType_activateCategoryResponse.elements = new Element[1];
		_complexType_activateCategoryResponse.elements[0] = _type_ActivateCategoryResult;
		_type_ActivateCategoryResponse = new Element(_qname_ActivateCategoryResponse, _complexType_activateCategoryResponse);
		_type_PauseCategory = new Element(_qname_PauseCategory, _complexType_activateCategory);
		Element _type_PauseCategoryResult;
		_type_PauseCategoryResult = new Element(_qname_PauseCategoryResult, Type.BOOLEAN, 0, 1, false);
		ComplexType _complexType_pauseCategoryResponse;
		_complexType_pauseCategoryResponse = new ComplexType();
		_complexType_pauseCategoryResponse.elements = new Element[1];
		_complexType_pauseCategoryResponse.elements[0] = _type_PauseCategoryResult;
		_type_PauseCategoryResponse = new Element(_qname_PauseCategoryResponse, _complexType_pauseCategoryResponse);
		Element _type_Title;
		_type_Title = new Element(_qname_Title, Type.STRING, 1, 1, true);
		Element _type_InteractionNote;
		_type_InteractionNote = new Element(_qname_InteractionNote, Type.STRING, 1, 1, true);
		Element _type_Status;
		_type_Status = new Element(_qname_Status, Type.STRING);
		Element _type_Types;
		_type_Types = new Element(_qname_Types, Type.STRING, 1, -1, false);
		Element _type_AssociatedPayload;
		_type_AssociatedPayload = new Element(_qname_AssociatedPayload, Type.STRING, 0, 1, true);
		ComplexType _complexType_tag;
		_complexType_tag = new ComplexType();
		_complexType_tag.elements = new Element[7];
		_complexType_tag.elements[0] = _type_Title;
		_complexType_tag.elements[1] = _type_InteractionNote;
		_complexType_tag.elements[2] = _type_Status;
		_complexType_tag.elements[3] = _type_Types;
		_complexType_tag.elements[4] = _type_UTCStartDate;
		_complexType_tag.elements[5] = _type_UTCEndDate;
		_complexType_tag.elements[6] = _type_AssociatedPayload;
		Element _type_tag;
		_type_tag = new Element(_qname_tag, _complexType_tag, 0, 1, true);
		ComplexType _complexType_createTag;
		_complexType_createTag = new ComplexType();
		_complexType_createTag.elements = new Element[3];
		_complexType_createTag.elements[0] = _type_userCredential;
		_complexType_createTag.elements[1] = _type_categoryName;
		_complexType_createTag.elements[2] = _type_tag;
		_type_CreateTag = new Element(_qname_CreateTag, _complexType_createTag);
		Element _type_CreateTagResult;
		_type_CreateTagResult = new Element(_qname_CreateTagResult, Type.BOOLEAN, 0, 1, false);
		ComplexType _complexType_createTagResponse;
		_complexType_createTagResponse = new ComplexType();
		_complexType_createTagResponse.elements = new Element[1];
		_complexType_createTagResponse.elements[0] = _type_CreateTagResult;
		_type_CreateTagResponse = new Element(_qname_CreateTagResponse, _complexType_createTagResponse);
		_type_TagFaultFault = new Element(_qname_TagFaultFault, _complexType_receiverFault_Exception);
		Element _type_tagName;
		_type_tagName = new Element(_qname_tagName, Type.STRING, 0, 1, true);
		ComplexType _complexType_activateTag;
		_complexType_activateTag = new ComplexType();
		_complexType_activateTag.elements = new Element[3];
		_complexType_activateTag.elements[0] = _type_userCredential;
		_complexType_activateTag.elements[1] = _type_categoryName;
		_complexType_activateTag.elements[2] = _type_tagName;
		_type_ActivateTag = new Element(_qname_ActivateTag, _complexType_activateTag);
		Element _type_ActivateTagResult;
		_type_ActivateTagResult = new Element(_qname_ActivateTagResult, Type.BOOLEAN, 0, 1, false);
		ComplexType _complexType_activateTagResponse;
		_complexType_activateTagResponse = new ComplexType();
		_complexType_activateTagResponse.elements = new Element[1];
		_complexType_activateTagResponse.elements[0] = _type_ActivateTagResult;
		_type_ActivateTagResponse = new Element(_qname_ActivateTagResponse, _complexType_activateTagResponse);
		_type_PauseTag = new Element(_qname_PauseTag, _complexType_activateTag);
		Element _type_PauseTagResult;
		_type_PauseTagResult = new Element(_qname_PauseTagResult, Type.BOOLEAN, 0, 1, false);
		ComplexType _complexType_pauseTagResponse;
		_complexType_pauseTagResponse = new ComplexType();
		_complexType_pauseTagResponse.elements = new Element[1];
		_complexType_pauseTagResponse.elements[0] = _type_PauseTagResult;
		_type_PauseTagResponse = new Element(_qname_PauseTagResponse, _complexType_pauseTagResponse);
		_type_DeleteTag = new Element(_qname_DeleteTag, _complexType_activateTag);
		Element _type_DeleteTagResult;
		_type_DeleteTagResult = new Element(_qname_DeleteTagResult, Type.BOOLEAN, 0, 1, false);
		ComplexType _complexType_deleteTagResponse;
		_complexType_deleteTagResponse = new ComplexType();
		_complexType_deleteTagResponse.elements = new Element[1];
		_complexType_deleteTagResponse.elements[0] = _type_DeleteTagResult;
		_type_DeleteTagResponse = new Element(_qname_DeleteTagResponse, _complexType_deleteTagResponse);
		Element _type_existingTagName;
		_type_existingTagName = new Element(_qname_existingTagName, Type.STRING, 0, 1, true);
		ComplexType _complexType_updateTag;
		_complexType_updateTag = new ComplexType();
		_complexType_updateTag.elements = new Element[4];
		_complexType_updateTag.elements[0] = _type_userCredential;
		_complexType_updateTag.elements[1] = _type_categoryName;
		_complexType_updateTag.elements[2] = _type_existingTagName;
		_complexType_updateTag.elements[3] = _type_tag;
		_type_UpdateTag = new Element(_qname_UpdateTag, _complexType_updateTag);
		Element _type_UpdateTagResult;
		_type_UpdateTagResult = new Element(_qname_UpdateTagResult, Type.BOOLEAN, 0, 1, false);
		ComplexType _complexType_updateTagResponse;
		_complexType_updateTagResponse = new ComplexType();
		_complexType_updateTagResponse.elements = new Element[1];
		_complexType_updateTagResponse.elements[0] = _type_UpdateTagResult;
		_type_UpdateTagResponse = new Element(_qname_UpdateTagResponse, _complexType_updateTagResponse);
		Element _type_imageType;
		_type_imageType = new Element(_qname_imageType, Type.STRING, 0, -1, false);
		Element _type_sizeInInches;
		_type_sizeInInches = new Element(_qname_sizeInInches, Type.FLOAT, 0, 1, false);
		Element _type_decorationsType;
		_type_decorationsType = new Element(_qname_decorationsType, Type.STRING, 0, 1, false);
		Element _type_isBlackWhite;
		_type_isBlackWhite = new Element(_qname_isBlackWhite, Type.BOOLEAN, 0, 1, false);
		ComplexType _complexType_getBarcode;
		_complexType_getBarcode = new ComplexType();
		_complexType_getBarcode.elements = new Element[7];
		_complexType_getBarcode.elements[0] = _type_userCredential;
		_complexType_getBarcode.elements[1] = _type_categoryName;
		_complexType_getBarcode.elements[2] = _type_tagName;
		_complexType_getBarcode.elements[3] = _type_imageType;
		_complexType_getBarcode.elements[4] = _type_sizeInInches;
		_complexType_getBarcode.elements[5] = _type_decorationsType;
		_complexType_getBarcode.elements[6] = _type_isBlackWhite;
		_type_GetBarcode = new Element(_qname_GetBarcode, _complexType_getBarcode);
		Element _type_GetBarcodeResult;
		_type_GetBarcodeResult = new Element(_qname_GetBarcodeResult, Type.STRING, 0, 1, true);
		ComplexType _complexType_getBarcodeResponse;
		_complexType_getBarcodeResponse = new ComplexType();
		_complexType_getBarcodeResponse.elements = new Element[1];
		_complexType_getBarcodeResponse.elements[0] = _type_GetBarcodeResult;
		_type_GetBarcodeResponse = new Element(_qname_GetBarcodeResponse, _complexType_getBarcodeResponse);
		_type_BarCodeFaultFault = new Element(_qname_BarCodeFaultFault, _complexType_receiverFault_Exception);
		_type_GetTagId = new Element(_qname_GetTagId, _complexType_activateTag);
		Element _type_GetTagIdResult;
		_type_GetTagIdResult = new Element(_qname_GetTagIdResult, Type.STRING, 0, 1, true);
		ComplexType _complexType_getTagIdResponse;
		_complexType_getTagIdResponse = new ComplexType();
		_complexType_getTagIdResponse.elements = new Element[1];
		_complexType_getTagIdResponse.elements[0] = _type_GetTagIdResult;
		_type_GetTagIdResponse = new Element(_qname_GetTagIdResponse, _complexType_getTagIdResponse);
	}

	public Element handleFault(QName name) {
		if ("BarCodeFaultFault".equals(name.getLocalPart()) && "".equals(name.getNamespaceURI())) {
			return _type_BarCodeFaultFault;
		}
		if ("CategoryFaultFault".equals(name.getLocalPart()) && "".equals(name.getNamespaceURI())) {
			return _type_CategoryFaultFault;
		}
		if ("ReceiverFaultFault".equals(name.getLocalPart()) && "".equals(name.getNamespaceURI())) {
			return _type_ReceiverFaultFault;
		}
		if ("SenderFaultFault".equals(name.getLocalPart()) && "".equals(name.getNamespaceURI())) {
			return _type_SenderFaultFault;
		}
		if ("TagFaultFault".equals(name.getLocalPart()) && "".equals(name.getNamespaceURI())) {
			return _type_TagFaultFault;
		}
		if ("UserAuthFaultFault".equals(name.getLocalPart()) && "".equals(name.getNamespaceURI())) {
			return _type_UserAuthFaultFault;
		}
		return null;
	}

}
