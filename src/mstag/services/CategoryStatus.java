// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JSR-172 Implementation wscompile 1.0, using: JAX-RPC Standard Implementation (1.1, build R59)

package mstag.services;



public class CategoryStatus {
    private java.lang.String value;
    public static final String _ActiveString = "Active";
    public static final String _PausedString = "Paused";
    
    public static final java.lang.String _Active = new java.lang.String(_ActiveString);
    public static final java.lang.String _Paused = new java.lang.String(_PausedString);
    
    public static final CategoryStatus Active = new CategoryStatus(_Active);
    public static final CategoryStatus Paused = new CategoryStatus(_Paused);
    
    protected CategoryStatus(java.lang.String value) {
        this.value = value;
    }
    
    public java.lang.String getValue() {
        return value;
    }
    
    public static CategoryStatus fromValue(java.lang.String value)
        throws java.lang.IllegalStateException {
        if (Active.value.equals(value)) {
            return Active;
        } else if (Paused.value.equals(value)) {
            return Paused;
        }
        throw new IllegalArgumentException();
    }
    
    public static CategoryStatus fromString(String value)
        throws java.lang.IllegalStateException {
        if (value.equals(_ActiveString)) {
            return Active;
        } else if (value.equals(_PausedString)) {
            return Paused;
        }
        throw new IllegalArgumentException();
    }
    
    public String toString() {
        return value.toString();
    }
    
    private Object readResolve() {
        return fromValue(getValue());
    }
    
    public boolean equals(Object obj) {
        if (!(obj instanceof CategoryStatus)) {
            return false;
        }
        return ((CategoryStatus)obj).value.equals(value);
    }
    
    public int hashCode() {
        return value.hashCode();
    }
}
