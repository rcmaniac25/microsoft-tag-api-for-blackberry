// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JSR-172 Implementation wscompile 1.0, using: JAX-RPC Standard Implementation (1.1, build R59)

package mstag.services;



public class DecorationType {
    private java.lang.String value;
    public static final String _HCCBRP_DECORATION_NONEString = "HCCBRP_DECORATION_NONE";
    public static final String _HCCBRP_DECORATION_DOWNLOADString = "HCCBRP_DECORATION_DOWNLOAD";
    public static final String _HCCBENCODEFLAG_STYLIZEDString = "HCCBENCODEFLAG_STYLIZED";
    public static final String _HCCBRP_DECORATION_FRAMEPLAINString = "HCCBRP_DECORATION_FRAMEPLAIN";
    public static final String _HCCBRP_DECORATION_TEXTString = "HCCBRP_DECORATION_TEXT";
    
    public static final java.lang.String _HCCBRP_DECORATION_NONE = new java.lang.String(_HCCBRP_DECORATION_NONEString);
    public static final java.lang.String _HCCBRP_DECORATION_DOWNLOAD = new java.lang.String(_HCCBRP_DECORATION_DOWNLOADString);
    public static final java.lang.String _HCCBENCODEFLAG_STYLIZED = new java.lang.String(_HCCBENCODEFLAG_STYLIZEDString);
    public static final java.lang.String _HCCBRP_DECORATION_FRAMEPLAIN = new java.lang.String(_HCCBRP_DECORATION_FRAMEPLAINString);
    public static final java.lang.String _HCCBRP_DECORATION_TEXT = new java.lang.String(_HCCBRP_DECORATION_TEXTString);
    
    public static final DecorationType HCCBRP_DECORATION_NONE = new DecorationType(_HCCBRP_DECORATION_NONE);
    public static final DecorationType HCCBRP_DECORATION_DOWNLOAD = new DecorationType(_HCCBRP_DECORATION_DOWNLOAD);
    public static final DecorationType HCCBENCODEFLAG_STYLIZED = new DecorationType(_HCCBENCODEFLAG_STYLIZED);
    public static final DecorationType HCCBRP_DECORATION_FRAMEPLAIN = new DecorationType(_HCCBRP_DECORATION_FRAMEPLAIN);
    public static final DecorationType HCCBRP_DECORATION_TEXT = new DecorationType(_HCCBRP_DECORATION_TEXT);
    
    protected DecorationType(java.lang.String value) {
        this.value = value;
    }
    
    public java.lang.String getValue() {
        return value;
    }
    
    public static DecorationType fromValue(java.lang.String value)
        throws java.lang.IllegalStateException {
        if (HCCBRP_DECORATION_NONE.value.equals(value)) {
            return HCCBRP_DECORATION_NONE;
        } else if (HCCBRP_DECORATION_DOWNLOAD.value.equals(value)) {
            return HCCBRP_DECORATION_DOWNLOAD;
        } else if (HCCBENCODEFLAG_STYLIZED.value.equals(value)) {
            return HCCBENCODEFLAG_STYLIZED;
        } else if (HCCBRP_DECORATION_FRAMEPLAIN.value.equals(value)) {
            return HCCBRP_DECORATION_FRAMEPLAIN;
        } else if (HCCBRP_DECORATION_TEXT.value.equals(value)) {
            return HCCBRP_DECORATION_TEXT;
        }
        throw new IllegalArgumentException();
    }
    
    public static DecorationType fromString(String value)
        throws java.lang.IllegalStateException {
        if (value.equals(_HCCBRP_DECORATION_NONEString)) {
            return HCCBRP_DECORATION_NONE;
        } else if (value.equals(_HCCBRP_DECORATION_DOWNLOADString)) {
            return HCCBRP_DECORATION_DOWNLOAD;
        } else if (value.equals(_HCCBENCODEFLAG_STYLIZEDString)) {
            return HCCBENCODEFLAG_STYLIZED;
        } else if (value.equals(_HCCBRP_DECORATION_FRAMEPLAINString)) {
            return HCCBRP_DECORATION_FRAMEPLAIN;
        } else if (value.equals(_HCCBRP_DECORATION_TEXTString)) {
            return HCCBRP_DECORATION_TEXT;
        }
        throw new IllegalArgumentException();
    }
    
    public String toString() {
        return value.toString();
    }
    
    private Object readResolve() {
        return fromValue(getValue());
    }
    
    public boolean equals(Object obj) {
        if (!(obj instanceof DecorationType)) {
            return false;
        }
        return ((DecorationType)obj).value.equals(value);
    }
    
    public int hashCode() {
        return value.hashCode();
    }
}
